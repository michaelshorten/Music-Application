<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIQAAABsCAYAAACrUxpIAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAGptJREFUeF7tnQe4NFlRhsk5SQZZligsGQREWViWnFYJS85ZZEmiIGtEco4rCBIk
        B4UlI5KjAVFQEAOKImYFFbPsz/e2XUNN9dc9PTN95879/7nP896ePqf6dE93zQl1qk6f7tChQ4cdp512
        2tnF7cXDxa2dzA6PTTyI6MGfV9xK/Jx4priRk+tD8mcWVxAniEeLU8RbxMfEF8Xfi2+0fEscaj+T/hXx
        OfE+8SrxNPEQcSNxMXe+bcUmHhR0s88qvk9QE7xE/IK4pZOtSO4S4h7iBeI3xH8JHvJe8C/iQ+Kp4nbi
        ou6atgGbuO3ohl5P3Es8WfySeLW4vziLkwflnVEcL54l/kC4B7dJPi+oyW4izuqueT+widuIbhpNwl3F
        z4hniDeKV4rniN5fnPKu2cr8jXAPZhugBnm5uIU4o/sem8ImbhO6QdcSPyGeJEIR4LXCdhiVfhZxT/F7
        wj2AbebvBE3L0e677TU2cRvQDbm5eKGgg0azQGftvYJa4aXiPOaYc4rHia8Jd7MPEnRc3y6Oq99zL7GJ
        +4W+PO38XcSviCeIXxUvFrS31A6fFCea484kHiSmbhZ4KJTJKOM3xQfEqYaPCDqmXxCMOlxZ60D5S42a
        VsUmbhp92dOLO4vfEj8vXifeLKgRfk38oviUOMoce1PxJeFu5Bj+W/yOeI34acF1XFdcXKzUnus4FPRi
        4jqCkczPCspHsf9PuOsYw6+LK7lzToVN3CT6grcUPBA6VSgDv8boBP6koB+AQsz1xLV/PsHowt24If5K
        0P/4YXFtceZc7l6j8zFURlFOEtSEfyvcdfaBQj1XnNeVvy42cRPoC11dfFjwwB8gfl+8XlArUPU+RmD4
        eYg59jgxtp/wv4KqngdwxVrWNqDrurJ4rKBJDKPXIvj+t3DlrYNN3Ev0JRg+Ygz6d0GN8Gzxz4I+A7+W
        XxYYmP5D3KYcS9NCrbHopvGHEtxbnD+Xse3oei8sfkTQZ3HfrfIicQ5X1irYxL1AF83DvJ9gWEWzcKd2
        i5EIYxG/5J8S7xH/IK5djj+HwJTsbkpAc0A/4JL52IOKvsf3CO7N14X7vgF9k0u7MpbFJk6NLva7BXZ+
        Lh4TM3MFmIoZVvGQqQ0eLGg+UIarluMvIOhU1hsR0Aeh87bR/sCm0Pc6l3iY+FPhvj/8kzjeHb8MNnFK
        dJH3EfQFaCLoK2BU4gtgY+AhowB3EPy6nTJcSNC/qDcAflfcKssfzui7Mnq5r/hL4e4HHc77umPHYhOn
        QBfGKAA7AhfKbCAzkfFgmZH8Y0HzcRuBMlBLXKeUQc3glOHPBcPD02f5IwV9byyxjxSYvOu9gYe648Zg
        E9dFF3QN8eX24j4teOgYbOgM/rhAw6kNQhlIP6GUQZ+hdqywGTChdfYse6Si+3AR0Tf0XkkpbOI66EJo
        FmIq+Z2CXzK/fh46Wo0CfFNgUPozgdwjSxl0QKN2CX5bHJPldvw/ui83E3UYzt+dnfwQNnEVdHLMzhhM
        4oKwNjJFHUNEJqjoFLFPn4GOIOlvNGVh2YtykH+KOCw7jFOh+0PzWkdh/DCv6+T7sInLopNSvb+tvQjA
        TEuvOJSBCapQgIcKag4+Y3I+dynrxiKOwz5xk5y/YxjdL0Zwcf/gr8WFnKzDJi4DJxPMQcQFUDNgEIp9
        rI9vbT8zY/n49jMXXTuRdESj6kNZLp/zd4xD940mJNsusO2M6oDbxLHoJHVIiK0Bg1NoKMNCLJB85gEz
        bxF5zzLloTDk0Zk8X83fMR7dv6uKPPv7ICdXsYlj0AmqMnxW0FGkA8k+QyKMRSgAo4PvF3QoyaMzOWdu
        1T4OqeThe3iunLdjNXQfLyfinlNjXNjJZWziIlTw+UVWBuYgeODZF+CBIi7miQILZeTdo5R3BoH5FQ/n
        yezyO2ZKETXFy5xMxiYOoUKJefhEewLAOoajKG7okUZvl0kqPjOyoE2LPGqSufZM+1gzaVIO1ETUQUH3
        FTfEfxM8qys4mcAm9qHCGFpGBzH4MRFtPzAyuGPax/hEXyL2qwEKcyzGq8vk9B3Tovsb/bdXuvzAJvah
        wnBjiwcLHxQ4s+Y0pm7/sP3Mg6YfEXl/Is5QyuT4yef1d3TRfWbK4H9Er5e6TXSoEIxJ8WCBTiOuZkxc
        RRrNxiPSPp3MMGHDw025s/6EPm9tAMvhgO4vNfxHxeNdPtjEigpgXv5fRTxYwAWN8W1OO1F8tf1M7UAc
        ReTh7zDXR9A+Bq0muEZb2rmX5PyDhK6dm00MCDUekWSPEvh/0GRujX+GrgVXhE+7PLCJGR1MG/8ZEQ8W
        8DDODxvoJ2CFjH2MU9mH4X2ufFAeoxZmMF/l8jeJroEaL/i8k8lIhphQzPJDvpFfccduEl3DrCOvzz8q
        rLNuJ6GiA2l36hfEpzGGlAEdSR4qn+lYEm6X8x/YUz5DzqhptkEh8jUPPkjln01gN8nHOLZBIfBhbTr0
        2vIjv1mVgU5CRgcxjU1Vn78cs5B58gkwNP1g2ieWAl/JLHOpnnPksg6aQjBHk+WBmgV/TlzmqTUx1G2D
        QvAs+aFeot23IQadhEAHMAVNP6B+YQJmGdPmtJNFntzCGSZ79Xy15xyXFfyF3IFRCOWdR9T78ApxtiJH
        k3K1nLYf6BpQCK4RG9KZnAzYRNBBTF3nLwtEKdVfBTXIVdot+9yk2ly8uecccZHBQVII1pHIsjgM997o
        /UbXlu/1U5wM2EQdgFMn06b5C8MNRR5mwrtF7kyyT0xFlnliz3kOskLgIZ5lH+3ktgVdX77X/N3cyXUS
        QML0mvOXBUYM2cYQMPx8R9rHDb5aM+/Tc56DrBDZGQiOdXLbgq5v1L3uJEiQ2uEf04EB3r7O4fXSAo/q
        2GeNgzoEu3E9T3uug6wQ2VwP13By2wLXV653tEIQUpYPBJoJmouazkRVTFsHVyz7cK16nvZcCy9SaXOm
        7lVQGaODdtO1wJ4rhI5bq9+h40fdH66vvc5gsUJICGvbX6SDgliToaYTkocXdezj90AAbZYBG1OpdHuR
        2mJNe5nATZ90ZulwwaOvsvDhSuZKgmujoxedXYZc7xc4Afc+hFY2mCmEPmM8e16CsrMsnmI5v6GUzcgN
        yyVeZIQmcL84lmsknpWFQgbd3ZR/boGzMksE8J04nvuDpxn9N+xGzRBfW75rXAvXl6+X65+7Vqgny7aE
        DAtlxcPJYKaNwBsg1gIv6ywD1hVO6R2FEHj64KKf0zPvEnYtKaWj0Ljpc4PcscHHxQV6yshyWSEuVfJG
        kY7HoYh5BCuX4D5bx1ilHyv6gnQyTbCOtowKXX4v9YTh/Jr5T3GDkhawjB9KEPt8YULysgyMbTIIj+eX
        k9McL+gpj1rFyTswHHX8DIvMJAqhLdZYlNDKGBjhzXmNaR+bTbV79LG+QmjnoiI7ywaMIMIvMoMFjl8k
        06mRxuIeTOpkObCrnyi9KkSUxRY/C7x98MKmOs1y1ABzlk/tUxVnGSbjKAMbCf0aFLXWcnfPZbTl5Pys
        ELi5U4O9QXCjq+m+t8nQ1tWaBPHy/WneWNOyRmE9LM7dluGq/LuJY1qoxWnWUZpQiNWbDO0wQ8dDzg8Y
        6GS60HQKZJWVnMaNcnMfd4rzZJReFSKYi0/U/lGi2j+eUGTyBBy12tVzfitzeZFHRJ8yMpEHk3QqlZeb
        VXihkbltkXlPyc8KgzJ21thq5ehjXNykd5rnKgOzDxKgk4JgxE8ETGRF5yfDwh7VIolCYMbOaXByPmk6
        p1OIzkNqZVnTMct9LuXVkU3HoztQXvbthO8q+TlvKoWow/VrGhk6nHm4/oWUx0POx78/HzsGHTNeIZRJ
        PER0xLBB8Mdnaov60ANubO2EoiSuyXh1PXF7XqcQ9+qRvX6Rwx2sCfLRFuNYziP2g+Gwg9FHlp0LBCp5
        UykEK+pRpQfWkVjpeRnFr6V0bEP5XNTkV8nHLkLySykEji1ZGPsCW2brWN0t5wWsG1mPw2sab+ucBp+p
        J27PWy+Sv7lfbJIl4jliOoJmURFtWVogpy/DXct5ct4kCjEWlZEV4hslr3a2cau/fZYZQrJLKUS9oZyM
        2oGV4J7fplUwUWO9zGkRjJPTgHF2J9ZCafUiv1RlMsoPb6yguSHaMjrJ6ctQ+ys5b5sUItt7Mtg0FsZb
        SGYphche0QGdNOIp8rR2hqahKgQdNnrNOS24bT250upFvr3KZJSfbxhEbxrbRE6nyeD6xjDnOaT9XM6e
        KYTkMfkT5UannXkRmuAwNEFVCEZ0fcNIfsBzil1R/jiFUAZeP86QQxoPvLrPBUx0VYUArIy1aoc5qx0o
        bdRFBsqnScryzTIC2rI0UU5vnEBWoZQzqUJIBuMUNWt4lg0xpxDt8SgFw0MnD28SfaOP0QrBmolZMMNE
        lbNQAr8uXlJS0+m4VbsBELBTA3SWVYgYCQWPatOJNs/pK888lnImUwjl42LYt+KLo6MQgfLomPZZcxnR
        dMzfShutEERNZcEMylKHoQGOmrcuaYA9oxpBgrkHpf1lFaJ6cEWTwdJ8Of0R9dixlHImUQjlYWOotSY1
        MPcJRcE+wnKEeXjaqxCgfGob+g+5zID7VONfRisEo4UsmMFcyhdxE14s4oHrfE0nhI9gnZoOL80n1z7l
        5/xTc35F+bWqvUObjnLm9F4P70WUctZWCKXTJFdnIzrfHa9npeVV5gYVIpAc8TLOXWEu+En7oxWiWtEy
        vHWGLQaTbOEDlhvG3J3TgOFRfdABVeZsDK7PrJGU8z+RLy6jPGJKa1+nGYtrSzOV0xnVrBQLUcqZQiGq
        rYbR22WNHDEqMTMLoxQCJHu0qEsWPrnIjFaI2lHLcKL4/EeCv9inI4d1LX+JgImgWD+qMrPR6zPH51cb
        oTB2elvpWExzOVhPm2WGtEVZWLcq57+iljGGUsYUClFd7T7YI1dtOqMVAiRPvyIff0rJrwrxhpwfIJhn
        KyuMGPJ+HvY1QSzaug4kywkxeVPTgdC+mT+CPudIcrBxnkpncfQsV239+GzkfLhdlhlDOX4KhWDonuXe
        ZWSIk2A5hCy3rELw7rF8/NNKflUIWxsjOOR7gEmbv5wWNotvUoC2DHVyPjC17PoXwWzMrM/VIZfV5ub8
        HbTPl63NRTUoMZ9Rayuq5/tluUWU46dQCDrZWY41NM6Z8hlK8oKYLAMzhdBnVtAfXDxM+dWB6d4l/5Il
        n/vZWRoAQTdxFdCHyGsVBWHapklhXF3zeTBMF0cUeIVOarPWpLbI1bhR/CqoAmkmMNzUfGqZjpOM0ngf
        V5YLmK3lwTCVjnLRrhNO8ElTRj5uCoW4WpEDPLe4Fl4Wwwr4kZ5HIlkh+GGSRmcUyzER9bg0MkfC1Hn1
        taD55L6S37xGQVsUr/pTMGvK8cwTIXtCvQEVqpk+hxWaDx4atgqXj+HKeWkHsxlQfSYo1sk4+NXfMI7N
        KJ0+iXP166NTLZf8tRUClFeDoh0oRl50xSnEWJqQAG2xFfEKigioXnRvTkXIZQSsDJM1uMKQlQgmZ5mk
        aWHatv66A0Yts5GAPmP1jPWp+mB4tfC9nJLB97L6Tzg2pRCMxqoPZgZFwK5g5zL0eaxCcP9m8SH6jEKQ
        /rp2H79Q1+cLFioEnj6xNJDjI+2J+t7tQPXM23FcHszNXWif1xLhYMPIh+qMh8qEFrGS9DVGr0wnWd7L
        QXXIxBdVLfMEtN+MlqhiiT1t7BjlODyimFvgZW7WsQeUR+3H3EIw+HoC5fOCOCaoiG9hzSeuhftGk9iE
        /2lLUxBzLLOlifUZFzzW2uAHSP+MhVdY/R4YzeF2wPXOra+h/VCIrFwMb3HSZcVAjqVLgFmB11ScjABV
        cH1QAQE7fe0yMGTE8ILzirNo0uHkIePBVPOCuQXIdkyH7m1HIRbBQUNVK73fu5e0CkahiNnAOJJ9DenJ
        0vEcmpBBy1eejNrRj+7rSgox5NZNhwQHTpcX0FtnHB1Tt/xRW8REDh0Z2sehiR0mrVZ6A96OfnRPV1II
        2tT6gAJmOum5u6Fn8GUK0rb2YGmKmDqnDLynWYM551dsQPA2omu1cSEOyXL/1l64XWXQj1jqRyP5lRSC
        leTqw8lg0KDT4vKC7xWMq10e0COnFhnqacPckoX7ha4DQ9BsvkGf6Z2zAh92legP0aOnZpt7UVwrT8eN
        l8Uxexl9NGwDdCLvUuUdkkORcC8gVoZOKCM5mmCaZIKpO28SUtqyw9NOeASF1OFTBa+eoY4lMPOJBrtZ
        0eAHBD1lhlY0KXnV24Ah6lLOo1Oj82PA4YY3Zm9tWSCFfk691syD0/EMMRnVOLng6SHvUD4jJEYT7tgM
        z25Wa+jzJArBqxKdcPB0wfKDLi9AEVAIZ7UMMElzs09JafzKaLJoWpjDJ1AIK95F6oVuCp07mj6Mbri5
        ZTsKQUsEx6DYfNewm/Drv6BgtZjw2cACzJCbVXxZUYf7HLULf33RbNSkecKRzzg6YxOiLIbfeeLwqelY
        HJGx5wThL8F15vSgswwkhfR5VQeYqXnYeWV1B+Zgfh1u9jNg/ItL+dCEGlCDzL1HY1PovDHqQiHCh5Eb
        +kNGNi+Ugl2CSDE+04G+npHPr414ds1vZfLcB7YSF25ITYDdABnut12uWOkr9SH64jYD/hglLIqbfC8F
        alvd2TLY0umTECE+pDhAlTm68zYVOmcoRHa66ShDK0vVzh8yLMYWjjDWPV7p9AuiE9+ZbVRabnY7Xk8Z
        5eXZzef2yKykEJieo+A+sKDVULMKf5cRRG+7/IBl/Pjii0YdQBW9UaXQ+UIh4hf4cicXKD9CA8Kvo/PK
        qIzyI3KsE3KgtPzjvGnNr1BGK/vFnvzlFYJ/OqDPmSXAq4r2sc/hNmhWotU2LzHkeEwrR9yHy8/wy9uY
        Uuhc2VDHCOEoJxcoP8/18Df4FiDlx3JNnXkSpUVcLP0PRm0RbdZHnPtbtay2vJUVoi/2IqDThC2+z+kl
        4AbSJLDEr8sPkKOjSn8iz/D1sbGaQufJCrHw/RKSyTEhgz6hIJl4SE4h1gk46ry6UmkrK4RbZKzCUsZu
        uaBK1BJDvpqAwyzjexRoaFnggMmYPX+5is6RFeIGTiYjmRw8c08nk5HMkEK4gKmxdCb+lLayQvQF9Gaa
        mUlth3wwIWoJHG2HnG+AISZDUdz9qxOvg5lCG/s5FSo/FILmceH6TZLJCrHw7XeSGVKI8D1pZpHXReWs
        rBCMfauTagVLGes09C07lHl9Wy5rJrn8TCyqQUxoWPWGwFpol0meApUdCvFul1+RXCjELFp7CMkNKURM
        EeyvQoAOirf3D8F8PEOnISeLALcs+ghj1kRqPLG1jZe2OZkMTcxSLygdi8oNhZgZfIaQXCjEh11+RXJD
        ChFN58dq3iqonLUUIg4eggvGGlbfouMIg5aL7qqgBBF045ZUdmD1u1tc/1SozFCIzsteHJILhXiby69I
        bkghYhg5WyxkHVTOWgqRYzCGYHEOmpgaGOJovH60fW1Jd/CAmwVOtcWsOqamAEzrk02dq6xQCLtwSUVy
        oRCDYYiB5IYUgveQkPf1mrcKKmd1hQAdyK+aAoZAEVCIGljioF/CfACm1rq2gwMTcdOz13Zs8wHMOk7y
        eiaVEwoxKqZDclMqRH7T/9ovpVMZayvE0ORUJoJsa5CNAycb+h241I95wEwmRU1BBzYmkBbBXMtx+fus
        gsrYT4XIXuon1fxlURlrK0RfTGYFGwK+lItmQYMmGlvbGtbWB0rQmG61xZzLZBfT5otg1nStN/zp+P1U
        iGzn4bt0JraWQcevpxCgg8estgqPbeVdCF2F/gGv+KGmWGTWDhiCjnImmRKdc98Uos2PfgQsFXVW0fGT
        KAQdurigIZjiZRYUa+MYSyN9D2YHISaOxtDMe2wKnW+/FSIvwDqrKVdBx56UypqFDw7RSeBAETdlEa9p
        j8lv8h2Cm0ctwYhmjBIFOK1sei5jXxQClJdHZdSUTC0s7ZepY3DMiXIe52QqNlEH10VCh2jabG2ZlXT5
        leYlotrShAx5YlcYSey5J5XOsQ0KwfIGLBMd3x0wpdM84zFFLc6iLMyO0gQ/p6ccfEPzD493shOZz/M9
        xh3TSQAJMxdRo637wP6ORRIXMvdaJkfTN9AWJ4+xowig/OvX650Slb/vCgHKZ46HmmFMbd17buURe+vu
        sQ097CQEOoCQtlpIH81KtdqOHVoy6RX2Bkzcy9QUeFqxfPKexHGoXAKT+AWOWoFGcvgtID9qoTPJsWwj
        8ie6/IrkcGBCnpBKfE75AeK/wigEb3hcEo53xwbKZ/SCxxtTDhyPf6sNPewkBDqAC+fPPRRHM/Wr7dih
        JYE9zYtVtKWmcOskDUETsjWvUD5csImBbvgin4YM/pJEeTF/Udu/PogxaDRVW4J5FjnfVjBi8dqDtcbr
        O76DTQx0o1kub5EzbIaoZIahmKoXxSYEDEfjbbMscjFWmTLYTuy7rHcsh03M6EbX1xEuAida5jqweo5t
        BlCKo9vzUcPw+uex8xgBistEl13Jdcc4bGJGNxhDkouyGoIFObE3YHYe4/QCNB9XTufFi2vZJgS4VtaF
        2Nq37G4zNrGim8vMo7v5Q7y4PZZIJ/6cTAWPoZkfoz4zX5IjpJaBWgffirVf83gkYRMdurEx3l4GQtmo
        KTCGuHwH8x53LOfGUEO/ZBV2ywwsgU106May6uwy5uaAN+aHkcXlO+g/IL8bPWwYm9iHHhArxYy1YGaI
        +2COZBmlAMzh+xLjeaRiE4fQA3KvUBoDK7Wy5PGYEL4Ma0rYYNYd02MTF6EHxIKbTKwsC5HNNB8o1TLD
        SlzxHuCuZce02MRNoAfM6iixXsJYWHB9YTDMjtWxiZtCDxcXvEXrTlSYBrbh+TvWxyZuEj1c1tP+bPuw
        l4HaorFu7pgOm7hp9GBZpGuVyGcMVit5E+3w2MT9QA8VAxYPd5VhLSZulmHe2S3WxCbuJ3qox4ox8aAO
        mp613PCPdGzifqOHyhQ66zO6hz4GnGeIKd3VGEtiE7cBHqZgDmTRMgVD4O7Puzg2vnjZQcUmbhN6mMSG
        Eg7oHvhYGNqylMHl3Dl2fAebuG3oQVJb4CrX9zKWZWAFHGqNzsvpdxw63bcBMs+C9FQtdAEAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>